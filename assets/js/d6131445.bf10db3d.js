"use strict";(self.webpackChunknvchad_site=self.webpackChunknvchad_site||[]).push([[328],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),c=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=c(n),f=a,d=m["".concat(i,".").concat(f)]||m[f]||s[f]||l;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=m;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},913:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={},o=void 0,u={unversionedId:"config/Nvim lua stuff",id:"config/Nvim lua stuff",title:"Nvim lua stuff",description:"Load a file",source:"@site/docs/config/Nvim lua stuff.md",sourceDirName:"config",slug:"/config/Nvim lua stuff",permalink:"/config/Nvim lua stuff",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Walkthrough",permalink:"/config/Walkthrough"},next:{title:"Custom config",permalink:"/config/Custom config"}},i={},c=[{value:"Load a file",id:"load-a-file",level:3},{value:"options",id:"options",level:3},{value:"autocmds / augroups",id:"autocmds--augroups",level:3},{value:"globals",id:"globals",level:3}],p={toc:c};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"load-a-file"},"Load a file"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Suppose file is ~/.config/nvim/lua/core/chad.lua"),(0,a.kt)("li",{parentName:"ul"},"Note that lua dir in your nvim config is already in the runtime!")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"require 'core.chad'\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If you rename that chad.lua to init.lua ")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"require 'core'\n")),(0,a.kt)("h3",{id:"options"},"options"),(0,a.kt)("p",null,"vimscript:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vim"},"set mouse = a\n")),(0,a.kt)("p",null,"lua:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'vim.opt.mouse = "a"\n')),(0,a.kt)("h3",{id:"autocmds--augroups"},"autocmds / augroups"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'vim.cmd "augroup stuff"\n\n--  multiline  :\nvim.cmd([[\n  stuff\n  stuff\n]])\n')),(0,a.kt)("h3",{id:"globals"},"globals"),(0,a.kt)("p",null,"vimscript:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"let g:autosave = true\n")),(0,a.kt)("p",null,"lua:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},"vim.g.autosave = true\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"multiline global stuff")),(0,a.kt)("p",null,"vimscript:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-vim"},"let g:nvim_tree_show_icons = {\n    \\ 'git': 1,\n    \\ 'folders': 0,\n    \\ }\n")),(0,a.kt)("p",null,"lua:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"}," vim.g.nvim_tree_show_icons = {\n     git = 1,\n     folders = 0,\n  }\n")),(0,a.kt)("p",null,"check ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/nanotee/nvim-lua-guide"},"nvim-lua guide")," for better explanation and more info!"))}s.isMDXComponent=!0}}]);